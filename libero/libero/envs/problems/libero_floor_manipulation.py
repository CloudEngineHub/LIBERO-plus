from robosuite.utils.mjcf_utils import new_site

from libero.libero.envs.bddl_base_domain import BDDLBaseDomain, register_problem
from libero.libero.envs.robots import *
from libero.libero.envs.objects import *
from libero.libero.envs.predicates import *
from libero.libero.envs.regions import *
from libero.libero.envs.utils import rectangle2xyrange

from scipy.spatial.transform import Rotation

def scale_distance_from_pivot(original_quat=None, original_pos=None, scale_factor=1.3):
    """
    计算位置点到 (0, 0, 0.8) 的距离并按比例缩放，保持四元数不变
    
    参数:
        original_quat: 原始四元数 [w, x, y, z] (可选)
        original_pos: 原始位置 [x, y, z] (可选)
        scale_factor: 距离缩放因子 (默认1.5)
        
    返回:
        字典包含:
        - 'new_quat': 原始四元数 [w, x, y, z] (如果输入了original_quat)
        - 'new_pos': 缩放后的位置 [x, y, z] (如果输入了original_pos)
    """
    result = {}
    
    # 定义轴点
    pivot_point = np.array([0, 0, 0.8])
    
    # 处理四元数（保持不变）
    if original_quat is not None:
        result['new_quat'] = original_quat
    
    # 处理位置点缩放
    if original_pos is not None:
        original_pos = np.array(original_pos)
        # 计算从轴点到原始位置的向量
        vec_to_point = original_pos - pivot_point
        # 缩放这个向量
        scaled_vec = vec_to_point * scale_factor
        # 计算新位置
        new_pos = pivot_point + scaled_vec
        result['new_pos'] = new_pos.tolist() if isinstance(new_pos, np.ndarray) else new_pos
    
    return result

def rotate_around_y(original_quat=None, original_pos=None, degrees=0):
    """
    计算四元数和/或3D位置点绕自定义轴 (x=0, z=0.8) 的平行于Y轴的轴旋转指定角度后的新值
    
    参数:
        original_quat: 原始四元数 [w, x, y, z] (可选)
        original_pos: 原始位置 [x, y, z] (可选)
        degrees: 旋转角度（度数），正值为从X轴向Z轴旋转方向
        
    返回:
        字典包含:
        - 'new_quat': 旋转后的四元数 [w, x, y, z] (如果输入了original_quat)
        - 'new_pos': 旋转后的位置 [x, y, z] (如果输入了original_pos)
    """
    result = {}
    
    # 定义旋转轴 (x=0, z=0.8) 的平行于Y轴的向量
    axis = np.array([0, 1, 0])  # 方向与Y轴相同
    axis_point = np.array([0, 0, 0.8])  # 轴经过的点
    
    # 创建绕自定义轴的旋转
    custom_rotation = Rotation.from_rotvec(np.radians(-degrees) * axis)
    
    # 处理四元数旋转
    if original_quat is not None:
        original_rot = Rotation.from_quat([original_quat[1], original_quat[2], original_quat[3], original_quat[0]])
        combined_rot = custom_rotation * original_rot
        new_quat = combined_rot.as_quat()
        result['new_quat'] = [float(new_quat[3]), float(new_quat[0]), float(new_quat[1]), float(new_quat[2])]
    
    # 处理位置点旋转
    if original_pos is not None:
        # 对于点旋转，需要先平移到旋转轴，旋转后再平移回来
        translated_pos = np.array(original_pos) - axis_point
        rotated_pos = custom_rotation.apply(translated_pos)
        final_pos = rotated_pos + axis_point
        result['new_pos'] = final_pos.tolist() if isinstance(final_pos, np.ndarray) else final_pos
    
    return result

def rotate_around_z(original_quat=None, original_pos=None, degrees=0):
    """
    计算四元数和/或3D位置点绕Z轴旋转指定角度后的新值
    
    参数:
        original_quat: 原始四元数 [w, x, y, z] (可选)
        original_pos: 原始位置 [x, y, z] (可选)
        degrees: 旋转角度（度数），正值为逆时针方向
        
    返回:
        字典包含:
        - 'new_quat': 旋转后的四元数 [w, x, y, z] (如果输入了original_quat)
        - 'new_pos': 旋转后的位置 [x, y, z] (如果输入了original_pos)
    """
    result = {}
    
    # 创建Z轴旋转
    z_rotation = Rotation.from_euler('z', degrees, degrees=True)
    
    # 处理四元数旋转
    if original_quat is not None:
        original_rot = Rotation.from_quat([original_quat[1], original_quat[2], original_quat[3], original_quat[0]])
        combined_rot = z_rotation * original_rot
        new_quat = combined_rot.as_quat()
        # result['new_quat'] = [new_quat[3], new_quat[0], new_quat[1], new_quat[2]]
        result['new_quat'] = [float(new_quat[3]), float(new_quat[0]), float(new_quat[1]), float(new_quat[2])]
    
    # 处理位置点旋转
    if original_pos is not None:
        # 将位置转换为齐次坐标并应用旋转
        rotated_pos = z_rotation.apply(original_pos)
        result['new_pos'] = rotated_pos.tolist() if isinstance(rotated_pos, np.ndarray) else rotated_pos
    
    return result

@register_problem
class Libero_Floor_Manipulation(BDDLBaseDomain):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, scale_factor, end_point_rot, end_point_vertical, init_state, *args, **kwargs):
        self.workspace_name = "floor"
        self.visualization_sites_list = []
        self.floor_offset = (0, 0, -0.035)

        self.z_offset = -0.025
        kwargs.update(
            {"robots": [f"OnTheGround{robot_name}" for robot_name in kwargs["robots"]]}
        )
        kwargs.update({"workspace_offset": self.floor_offset})
        kwargs.update({"arena_type": "floor"})

        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/libero_floor_base_style.xml"})
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        self.horizon_view = horizon_view
        self.vertical_view = vertical_view
        self.scale_factor = scale_factor
        self.end_point_rot = end_point_rot
        self.end_point_vertical = end_point_vertical
        self.init_state = init_state

        super().__init__(bddl_file_name, *args, **kwargs)

    def _load_fixtures_in_arena(self, mujoco_arena):
        """Nothing extra to load in this simple problem."""
        for fixture_category in list(self.parsed_problem["fixtures"].keys()):
            if fixture_category == "floor":
                continue

            for fixture_instance in self.parsed_problem["fixtures"][fixture_category]:
                self.fixtures_dict[fixture_instance] = get_object_fn(fixture_category)(
                    name=fixture_instance,
                    joints=None,
                )

    def _load_objects_in_arena(self, mujoco_arena):
        objects_dict = self.parsed_problem["objects"]
        for category_name in objects_dict.keys():
            for object_name in objects_dict[category_name]:
                self.objects_dict[object_name] = get_object_fn(category_name)(
                    name=object_name
                )

    def _load_sites_in_arena(self, mujoco_arena):
        # Create site objects
        object_sites_dict = {}
        region_dict = self.parsed_problem["regions"]
        for object_region_name in list(region_dict.keys()):

            if "floor" in object_region_name:
                ranges = region_dict[object_region_name]["ranges"][0]
                assert ranges[2] >= ranges[0] and ranges[3] >= ranges[1]
                zone_size = ((ranges[2] - ranges[0]) / 2, (ranges[3] - ranges[1]) / 2)
                zone_centroid_xy = (
                    (ranges[2] + ranges[0]) / 2,
                    (ranges[3] + ranges[1]) / 2,
                )
                target_zone = TargetZone(
                    name=object_region_name,
                    rgba=region_dict[object_region_name]["rgba"],
                    zone_size=zone_size,
                    zone_centroid_xy=zone_centroid_xy,
                )
                object_sites_dict[object_region_name] = target_zone

                mujoco_arena.floor_body.append(
                    new_site(
                        name=target_zone.name,
                        pos=target_zone.pos,
                        quat=target_zone.quat,
                        rgba=target_zone.rgba,
                        size=target_zone.size,
                        type="box",
                    )
                )
                continue
            # Otherwise the processing is consistent
            for query_dict in [self.objects_dict, self.fixtures_dict]:
                for (name, body) in query_dict.items():
                    try:
                        if "worldbody" not in list(body.__dict__.keys()):
                            # This is a special case for CompositeObject, we skip this as this is very rare in our benchmark
                            continue
                    except:
                        continue
                    for part in body.worldbody.find("body").findall(".//body"):
                        sites = part.findall(".//site")
                        joints = part.findall("./joint")
                        if sites == []:
                            break
                        for site in sites:
                            site_name = site.get("name")
                            if site_name == object_region_name:
                                object_sites_dict[object_region_name] = SiteObject(
                                    name=site_name,
                                    parent_name=body.name,
                                    joints=[joint.get("name") for joint in joints],
                                    size=site.get("size"),
                                    rgba=site.get("rgba"),
                                    site_type=site.get("type"),
                                    site_pos=site.get("pos"),
                                    site_quat=site.get("quat"),
                                    object_properties=body.object_properties,
                                )
        self.object_sites_dict = object_sites_dict

        # Keep track of visualization objects
        for query_dict in [self.fixtures_dict, self.objects_dict]:
            for name, body in query_dict.items():
                if body.object_properties["vis_site_names"] != {}:
                    self.visualization_sites_list.append(name)

    def _add_placement_initializer(self):
        """Very simple implementation at the moment. Will need to upgrade for other relations later."""
        super()._add_placement_initializer()

    def _check_success(self):
        """
        Check if the goal is achieved. Consider conjunction goals at the moment
        """
        goal_state = self.parsed_problem["goal_state"]
        result = True
        for state in goal_state:
            result = self._eval_predicate(state) and result
        return result

    def _eval_predicate(self, state):
        if len(state) == 3:
            # Checking binary logical predicates
            predicate_fn_name = state[0]
            object_1_name = state[1]
            object_2_name = state[2]
            return eval_predicate_fn(
                predicate_fn_name,
                self.object_states_dict[object_1_name],
                self.object_states_dict[object_2_name],
            )
        elif len(state) == 2:
            # Checking unary logical predicates
            predicate_fn_name = state[0]
            object_name = state[1]
            return eval_predicate_fn(
                predicate_fn_name, self.object_states_dict[object_name]
            )

    def _setup_references(self):
        super()._setup_references()

    def _post_process(self):
        super()._post_process()

        self.set_visualization()

    def set_visualization(self):

        for object_name in self.visualization_sites_list:
            for _, (site_name, site_visible) in (
                self.get_object(object_name).object_properties["vis_site_names"].items()
            ):
                vis_g_id = self.sim.model.site_name2id(site_name)
                if ((self.sim.model.site_rgba[vis_g_id][3] <= 0) and site_visible) or (
                    (self.sim.model.site_rgba[vis_g_id][3] > 0) and not site_visible
                ):
                    # We toggle the alpha value
                    self.sim.model.site_rgba[vis_g_id][3] = (
                        1 - self.sim.model.site_rgba[vis_g_id][3]
                    )

    def _setup_camera(self, mujoco_arena):
        pos_av = [0.8965773716836134, 5.216182733499864e-07, 0.65]
        quat_av = [
                0.6182166934013367,
                0.3432307541370392,
                0.3432314395904541,
                0.6182177066802979,
            ]
        up_view = self.vertical_view
        view = self.horizon_view
        scale_factor = self.scale_factor
        end_point_vertical = self.end_point_vertical
        end_point_rot = self.end_point_rot

        if int(up_view) != 0:
            # rotate the camera vertically
            result_up = rotate_around_y(original_quat=quat_av, original_pos=pos_av, degrees=int(up_view))
            pos_up = [round(x,4) for x in result_up['new_pos']]
            quat_up = [round(x,4) for x in result_up['new_quat']]
            # rotate the camera horizontally
            result_view = rotate_around_z(original_quat=quat_up, original_pos=pos_up, degrees=int(view))
            pos_view = [round(x,4) for x in result_view['new_pos']]
            quat_view = [round(x,4) for x in result_view['new_quat']]
        else:
            # rotate the camera horizontally
            result_view = rotate_around_z(original_quat=quat_av, original_pos=pos_av, degrees=int(view))
            pos_view = [round(x,4) for x in result_view['new_pos']]
            quat_view = [round(x,4) for x in result_view['new_quat']]

        if float(scale_factor) != 1.0:
            # scale the view
            result = scale_distance_from_pivot(original_quat=quat_view, original_pos=pos_view, scale_factor=float(scale_factor))
            pos_view = [round(x,4) for x in result['new_pos']]
            quat_view = [round(x,4) for x in result['new_quat']]

        if int(self.end_point_rot) != 0:
            result_view = rotate_around_z(original_quat=quat_view, degrees=int(self.end_point_rot))
            quat_view = [round(x,4) for x in result_view['new_quat']]
        if int(end_point_vertical) != 0:
            result_view = rotate_around_y(original_quat=quat_view, degrees=int(end_point_vertical))
            quat_view = [round(x,4) for x in result_view['new_quat']]

        mujoco_arena.set_camera(
            camera_name="agentview",
            pos=pos_view,
            quat=quat_view,
        )

        # view_list = [30,60,90,120,180,240,270,300,330]
        # for view in view_list:
        #     result_view = rotate_around_z(original_quat=quat_av, original_pos=pos_av, degrees=int(view))
        #     pos_view = [round(x,4) for x in result_view['new_pos']]
        #     quat_view = [round(x,4) for x in result_view['new_quat']]
        #     mujoco_arena.set_camera(
        #         camera_name=f"agentview_{str(view)}", pos=pos_view, quat=quat_view
        #     )

        # up_list = [15, 345]
        # for up_view in up_list:
        #     result_up = rotate_around_y(original_quat=quat_av, original_pos=pos_av, degrees=int(up_view))
        #     pos_up = [round(x,4) for x in result_up['new_pos']]
        #     quat_up = [round(x,4) for x in result_up['new_quat']]
        #     mujoco_arena.set_camera(
        #         camera_name=f"agentview_up_{str(up_view)}", pos=pos_up, quat=quat_up
        #     )
        #     for view in view_list:
        #         result_view = rotate_around_z(original_quat=quat_up, original_pos=pos_up, degrees=int(view))
        #         pos_view = [round(x,4) for x in result_view['new_pos']]
        #         quat_view = [round(x,4) for x in result_view['new_quat']]
        #         mujoco_arena.set_camera(
        #             camera_name=f"agentview_up_{str(up_view)}_{str(view)}", pos=pos_view, quat=quat_view
        #         )

        # up_scale_list = [30]
        # scale_factor = 1.25
        # for up_view in up_scale_list:
        #     result = scale_distance_from_pivot(original_quat=quat_av, original_pos=pos_av, scale_factor=scale_factor)
        #     pos_scale_av = [round(x,4) for x in result['new_pos']]
        #     quat_scale_av = [round(x,4) for x in result['new_quat']]
        #     result_up = rotate_around_y(original_quat=quat_scale_av, original_pos=pos_scale_av, degrees=int(up_view))
        #     pos_up = [round(x,4) for x in result_up['new_pos']]
        #     quat_up = [round(x,4) for x in result_up['new_quat']]
        #     mujoco_arena.set_camera(
        #         camera_name=f"agentview_up_{str(up_view)}", pos=pos_up, quat=quat_up
        #     )
        #     for view in view_list:
        #         result_view = rotate_around_z(original_quat=quat_up, original_pos=pos_up, degrees=int(view))
        #         pos_view = [round(x,4) for x in result_view['new_pos']]
        #         quat_view = [round(x,4) for x in result_view['new_quat']]
        #         mujoco_arena.set_camera(
        #             camera_name=f"agentview_up_{str(up_view)}_{str(view)}", pos=pos_view, quat=quat_view
        #         )

        # For visualization purpose
        mujoco_arena.set_camera(
            camera_name="frontview", pos=[1.0, 0.0, 0.65], quat=[0.56, 0.43, 0.43, 0.56]
        )
        mujoco_arena.set_camera(
            camera_name="galleryview",
            pos=[2.844547668904445, 2.1279684793440667, 3.128616846013882],
            quat=[
                0.42261379957199097,
                0.23374411463737488,
                0.41646939516067505,
                0.7702690958976746,
            ],
        )

@register_problem
class Libero_Floor_Manipulation_Floordark(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dark",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Floorrustic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "rustic",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Floorlight_gray(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Floorwhite_marble(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "white-marble",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Floorwood_plank(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "wood-plank",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Floorbrown_ceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brown-ceramic",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Floorgray_ceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray-ceramic",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Floortile_grigia_caldera(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "tile_grigia_caldera",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Floordapper_gray(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dapper_gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Floorgray(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Floorlight(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Floormarble(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "marble",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Floorbrick_disp(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brick-disp",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Floorcliffde_ao(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cliffde-ao",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Floorcobble01_ao(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cobble01-ao",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Floormarble01_col(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "marble01-col",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Floortile(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "tile",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Floorwoodfine01_a(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "woodfine01-a",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Floorbrick_col(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brick-col",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Floorcliffde_col(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cliffde-col",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Floorcliffde_nrm(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cliffde-nrm",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Floorcobble01_disp(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cobble01-disp",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Floormarble_gloss(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "marble-gloss",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Floorwoodfine01_g(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "woodfine01-g",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Floortile_r(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "tile-r",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)
        
@register_problem
class Libero_Floor_Manipulation_Combined_Floordark_Walllight_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dark",
                        "wall_style": "light-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordark_Walldark_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dark",
                        "wall_style": "dark-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordark_Walldark_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dark",
                        "wall_style": "dark-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordark_Wallgray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dark",
                        "wall_style": "gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordark_Walldark_green(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dark",
                        "wall_style": "dark-green",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordark_Walllight_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dark",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordark_Wallceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dark",
                        "wall_style": "ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordark_Wallwhite(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dark",
                        "wall_style": "white",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordark_Wallyellow_linen(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dark",
                        "wall_style": "yellow-linen",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordark_Wallgray(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dark",
                        "wall_style": "gray",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordark_Wallstucco(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dark",
                        "wall_style": "stucco",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordark_Wallcanvas(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dark",
                        "wall_style": "canvas",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordark_Wallcapriccio(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dark",
                        "wall_style": "capriccio",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordark_Wallcream(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dark",
                        "wall_style": "cream",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordark_Wallgray_ceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dark",
                        "wall_style": "gray-ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorrustic_Walllight_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "rustic",
                        "wall_style": "light-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorrustic_Walldark_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "rustic",
                        "wall_style": "dark-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorrustic_Walldark_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "rustic",
                        "wall_style": "dark-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorrustic_Wallgray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "rustic",
                        "wall_style": "gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorrustic_Walldark_green(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "rustic",
                        "wall_style": "dark-green",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorrustic_Walllight_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "rustic",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorrustic_Wallceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "rustic",
                        "wall_style": "ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorrustic_Wallwhite(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "rustic",
                        "wall_style": "white",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorrustic_Wallyellow_linen(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "rustic",
                        "wall_style": "yellow-linen",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorrustic_Wallgray(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "rustic",
                        "wall_style": "gray",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorrustic_Wallstucco(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "rustic",
                        "wall_style": "stucco",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorrustic_Wallcanvas(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "rustic",
                        "wall_style": "canvas",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorrustic_Wallcapriccio(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "rustic",
                        "wall_style": "capriccio",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorrustic_Wallcream(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "rustic",
                        "wall_style": "cream",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorrustic_Wallgray_ceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "rustic",
                        "wall_style": "gray-ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_gray_Walllight_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_gray_Walldark_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "dark-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_gray_Walldark_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "dark-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_gray_Wallgray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_gray_Walldark_green(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "dark-green",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_gray_Walllight_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_gray_Wallceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_gray_Wallwhite(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "white",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_gray_Wallyellow_linen(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "yellow-linen",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_gray_Wallgray(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "gray",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_gray_Wallstucco(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "stucco",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_gray_Wallcanvas(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "canvas",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_gray_Wallcapriccio(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "capriccio",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_gray_Wallcream(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "cream",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_gray_Wallgray_ceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "gray-ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwhite_marble_Walllight_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "white-marble",
                        "wall_style": "light-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwhite_marble_Walldark_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "white-marble",
                        "wall_style": "dark-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwhite_marble_Walldark_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "white-marble",
                        "wall_style": "dark-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwhite_marble_Wallgray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "white-marble",
                        "wall_style": "gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwhite_marble_Walldark_green(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "white-marble",
                        "wall_style": "dark-green",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwhite_marble_Walllight_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "white-marble",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwhite_marble_Wallceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "white-marble",
                        "wall_style": "ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwhite_marble_Wallwhite(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "white-marble",
                        "wall_style": "white",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwhite_marble_Wallyellow_linen(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "white-marble",
                        "wall_style": "yellow-linen",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwhite_marble_Wallgray(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "white-marble",
                        "wall_style": "gray",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwhite_marble_Wallstucco(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "white-marble",
                        "wall_style": "stucco",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwhite_marble_Wallcanvas(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "white-marble",
                        "wall_style": "canvas",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwhite_marble_Wallcapriccio(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "white-marble",
                        "wall_style": "capriccio",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwhite_marble_Wallcream(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "white-marble",
                        "wall_style": "cream",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwhite_marble_Wallgray_ceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "white-marble",
                        "wall_style": "gray-ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwood_plank_Walllight_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "wood-plank",
                        "wall_style": "light-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwood_plank_Walldark_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "wood-plank",
                        "wall_style": "dark-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwood_plank_Walldark_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "wood-plank",
                        "wall_style": "dark-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwood_plank_Wallgray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "wood-plank",
                        "wall_style": "gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwood_plank_Walldark_green(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "wood-plank",
                        "wall_style": "dark-green",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwood_plank_Walllight_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "wood-plank",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwood_plank_Wallceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "wood-plank",
                        "wall_style": "ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwood_plank_Wallwhite(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "wood-plank",
                        "wall_style": "white",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwood_plank_Wallyellow_linen(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "wood-plank",
                        "wall_style": "yellow-linen",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwood_plank_Wallgray(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "wood-plank",
                        "wall_style": "gray",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwood_plank_Wallstucco(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "wood-plank",
                        "wall_style": "stucco",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwood_plank_Wallcanvas(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "wood-plank",
                        "wall_style": "canvas",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwood_plank_Wallcapriccio(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "wood-plank",
                        "wall_style": "capriccio",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwood_plank_Wallcream(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "wood-plank",
                        "wall_style": "cream",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorwood_plank_Wallgray_ceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "wood-plank",
                        "wall_style": "gray-ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrown_ceramic_Walllight_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brown-ceramic",
                        "wall_style": "light-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrown_ceramic_Walldark_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brown-ceramic",
                        "wall_style": "dark-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrown_ceramic_Walldark_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brown-ceramic",
                        "wall_style": "dark-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrown_ceramic_Wallgray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brown-ceramic",
                        "wall_style": "gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrown_ceramic_Walldark_green(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brown-ceramic",
                        "wall_style": "dark-green",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrown_ceramic_Walllight_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brown-ceramic",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrown_ceramic_Wallceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brown-ceramic",
                        "wall_style": "ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrown_ceramic_Wallwhite(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brown-ceramic",
                        "wall_style": "white",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrown_ceramic_Wallyellow_linen(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brown-ceramic",
                        "wall_style": "yellow-linen",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrown_ceramic_Wallgray(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brown-ceramic",
                        "wall_style": "gray",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrown_ceramic_Wallstucco(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brown-ceramic",
                        "wall_style": "stucco",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrown_ceramic_Wallcanvas(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brown-ceramic",
                        "wall_style": "canvas",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrown_ceramic_Wallcapriccio(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brown-ceramic",
                        "wall_style": "capriccio",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrown_ceramic_Wallcream(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brown-ceramic",
                        "wall_style": "cream",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrown_ceramic_Wallgray_ceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brown-ceramic",
                        "wall_style": "gray-ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_ceramic_Walllight_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray-ceramic",
                        "wall_style": "light-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_ceramic_Walldark_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray-ceramic",
                        "wall_style": "dark-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_ceramic_Walldark_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray-ceramic",
                        "wall_style": "dark-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_ceramic_Wallgray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray-ceramic",
                        "wall_style": "gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_ceramic_Walldark_green(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray-ceramic",
                        "wall_style": "dark-green",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_ceramic_Walllight_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray-ceramic",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_ceramic_Wallceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray-ceramic",
                        "wall_style": "ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_ceramic_Wallwhite(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray-ceramic",
                        "wall_style": "white",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_ceramic_Wallyellow_linen(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray-ceramic",
                        "wall_style": "yellow-linen",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_ceramic_Wallgray(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray-ceramic",
                        "wall_style": "gray",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_ceramic_Wallstucco(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray-ceramic",
                        "wall_style": "stucco",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_ceramic_Wallcanvas(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray-ceramic",
                        "wall_style": "canvas",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_ceramic_Wallcapriccio(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray-ceramic",
                        "wall_style": "capriccio",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_ceramic_Wallcream(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray-ceramic",
                        "wall_style": "cream",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_ceramic_Wallgray_ceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray-ceramic",
                        "wall_style": "gray-ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floortile_grigia_caldera_Walllight_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "tile_grigia_caldera",
                        "wall_style": "light-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floortile_grigia_caldera_Walldark_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "tile_grigia_caldera",
                        "wall_style": "dark-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floortile_grigia_caldera_Walldark_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "tile_grigia_caldera",
                        "wall_style": "dark-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floortile_grigia_caldera_Wallgray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "tile_grigia_caldera",
                        "wall_style": "gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floortile_grigia_caldera_Walldark_green(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "tile_grigia_caldera",
                        "wall_style": "dark-green",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floortile_grigia_caldera_Walllight_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "tile_grigia_caldera",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floortile_grigia_caldera_Wallceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "tile_grigia_caldera",
                        "wall_style": "ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floortile_grigia_caldera_Wallwhite(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "tile_grigia_caldera",
                        "wall_style": "white",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floortile_grigia_caldera_Wallyellow_linen(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "tile_grigia_caldera",
                        "wall_style": "yellow-linen",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floortile_grigia_caldera_Wallgray(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "tile_grigia_caldera",
                        "wall_style": "gray",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floortile_grigia_caldera_Wallstucco(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "tile_grigia_caldera",
                        "wall_style": "stucco",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floortile_grigia_caldera_Wallcanvas(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "tile_grigia_caldera",
                        "wall_style": "canvas",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floortile_grigia_caldera_Wallcapriccio(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "tile_grigia_caldera",
                        "wall_style": "capriccio",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floortile_grigia_caldera_Wallcream(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "tile_grigia_caldera",
                        "wall_style": "cream",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floortile_grigia_caldera_Wallgray_ceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "tile_grigia_caldera",
                        "wall_style": "gray-ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordapper_gray_Walllight_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dapper_gray",
                        "wall_style": "light-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordapper_gray_Walldark_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dapper_gray",
                        "wall_style": "dark-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordapper_gray_Walldark_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dapper_gray",
                        "wall_style": "dark-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordapper_gray_Wallgray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dapper_gray",
                        "wall_style": "gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordapper_gray_Walldark_green(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dapper_gray",
                        "wall_style": "dark-green",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordapper_gray_Walllight_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dapper_gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordapper_gray_Wallceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dapper_gray",
                        "wall_style": "ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordapper_gray_Wallwhite(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dapper_gray",
                        "wall_style": "white",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordapper_gray_Wallyellow_linen(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dapper_gray",
                        "wall_style": "yellow-linen",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordapper_gray_Wallgray(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dapper_gray",
                        "wall_style": "gray",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordapper_gray_Wallstucco(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dapper_gray",
                        "wall_style": "stucco",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordapper_gray_Wallcanvas(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dapper_gray",
                        "wall_style": "canvas",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordapper_gray_Wallcapriccio(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dapper_gray",
                        "wall_style": "capriccio",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordapper_gray_Wallcream(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dapper_gray",
                        "wall_style": "cream",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floordapper_gray_Wallgray_ceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "dapper_gray",
                        "wall_style": "gray-ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_Walllight_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray",
                        "wall_style": "light-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_Walldark_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray",
                        "wall_style": "dark-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_Walldark_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray",
                        "wall_style": "dark-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_Wallgray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray",
                        "wall_style": "gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_Walldark_green(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray",
                        "wall_style": "dark-green",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_Walllight_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_Wallceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray",
                        "wall_style": "ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_Wallwhite(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray",
                        "wall_style": "white",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_Wallyellow_linen(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray",
                        "wall_style": "yellow-linen",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_Wallgray(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray",
                        "wall_style": "gray",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_Wallstucco(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray",
                        "wall_style": "stucco",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_Wallcanvas(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray",
                        "wall_style": "canvas",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_Wallcapriccio(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray",
                        "wall_style": "capriccio",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_Wallcream(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray",
                        "wall_style": "cream",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorgray_Wallgray_ceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "gray",
                        "wall_style": "gray-ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_Walllight_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light",
                        "wall_style": "light-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_Walldark_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light",
                        "wall_style": "dark-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_Walldark_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light",
                        "wall_style": "dark-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_Wallgray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light",
                        "wall_style": "gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_Walldark_green(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light",
                        "wall_style": "dark-green",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_Walllight_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_Wallceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light",
                        "wall_style": "ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_Wallwhite(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light",
                        "wall_style": "white",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_Wallyellow_linen(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light",
                        "wall_style": "yellow-linen",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_Wallgray(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light",
                        "wall_style": "gray",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_Wallstucco(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light",
                        "wall_style": "stucco",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_Wallcanvas(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light",
                        "wall_style": "canvas",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_Wallcapriccio(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light",
                        "wall_style": "capriccio",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_Wallcream(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light",
                        "wall_style": "cream",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorlight_Wallgray_ceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light",
                        "wall_style": "gray-ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floormarble_Walllight_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "marble",
                        "wall_style": "light-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floormarble_Walldark_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "marble",
                        "wall_style": "dark-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floormarble_Walldark_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "marble",
                        "wall_style": "dark-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floormarble_Wallgray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "marble",
                        "wall_style": "gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floormarble_Walldark_green(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "marble",
                        "wall_style": "dark-green",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floormarble_Walllight_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "marble",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floormarble_Wallceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "marble",
                        "wall_style": "ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floormarble_Wallwhite(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "marble",
                        "wall_style": "white",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floormarble_Wallyellow_linen(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "marble",
                        "wall_style": "yellow-linen",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floormarble_Wallgray(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "marble",
                        "wall_style": "gray",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floormarble_Wallstucco(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "marble",
                        "wall_style": "stucco",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floormarble_Wallcanvas(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "marble",
                        "wall_style": "canvas",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floormarble_Wallcapriccio(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "marble",
                        "wall_style": "capriccio",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floormarble_Wallcream(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "marble",
                        "wall_style": "cream",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floormarble_Wallgray_ceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "marble",
                        "wall_style": "gray-ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrick_disp_Walllight_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brick-disp",
                        "wall_style": "light-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrick_disp_Walldark_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brick-disp",
                        "wall_style": "dark-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrick_disp_Walldark_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brick-disp",
                        "wall_style": "dark-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrick_disp_Wallgray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brick-disp",
                        "wall_style": "gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrick_disp_Walldark_green(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brick-disp",
                        "wall_style": "dark-green",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrick_disp_Walllight_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brick-disp",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrick_disp_Wallceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brick-disp",
                        "wall_style": "ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrick_disp_Wallwhite(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brick-disp",
                        "wall_style": "white",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrick_disp_Wallyellow_linen(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brick-disp",
                        "wall_style": "yellow-linen",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrick_disp_Wallgray(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brick-disp",
                        "wall_style": "gray",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrick_disp_Wallstucco(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brick-disp",
                        "wall_style": "stucco",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrick_disp_Wallcanvas(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brick-disp",
                        "wall_style": "canvas",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrick_disp_Wallcapriccio(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brick-disp",
                        "wall_style": "capriccio",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrick_disp_Wallcream(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brick-disp",
                        "wall_style": "cream",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorbrick_disp_Wallgray_ceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "brick-disp",
                        "wall_style": "gray-ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcliffde_ao_Walllight_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cliffde-ao",
                        "wall_style": "light-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcliffde_ao_Walldark_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cliffde-ao",
                        "wall_style": "dark-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcliffde_ao_Walldark_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cliffde-ao",
                        "wall_style": "dark-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcliffde_ao_Wallgray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cliffde-ao",
                        "wall_style": "gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcliffde_ao_Walldark_green(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cliffde-ao",
                        "wall_style": "dark-green",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcliffde_ao_Walllight_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cliffde-ao",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcliffde_ao_Wallceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cliffde-ao",
                        "wall_style": "ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcliffde_ao_Wallwhite(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cliffde-ao",
                        "wall_style": "white",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcliffde_ao_Wallyellow_linen(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cliffde-ao",
                        "wall_style": "yellow-linen",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcliffde_ao_Wallgray(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cliffde-ao",
                        "wall_style": "gray",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcliffde_ao_Wallstucco(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cliffde-ao",
                        "wall_style": "stucco",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcliffde_ao_Wallcanvas(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cliffde-ao",
                        "wall_style": "canvas",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcliffde_ao_Wallcapriccio(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cliffde-ao",
                        "wall_style": "capriccio",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcliffde_ao_Wallcream(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cliffde-ao",
                        "wall_style": "cream",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcliffde_ao_Wallgray_ceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cliffde-ao",
                        "wall_style": "gray-ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcobble01_ao_Walllight_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cobble01-ao",
                        "wall_style": "light-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcobble01_ao_Walldark_blue(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cobble01-ao",
                        "wall_style": "dark-blue",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcobble01_ao_Walldark_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cobble01-ao",
                        "wall_style": "dark-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcobble01_ao_Wallgray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cobble01-ao",
                        "wall_style": "gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcobble01_ao_Walldark_green(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cobble01-ao",
                        "wall_style": "dark-green",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcobble01_ao_Walllight_gray_plaster(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cobble01-ao",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcobble01_ao_Wallceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cobble01-ao",
                        "wall_style": "ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcobble01_ao_Wallwhite(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cobble01-ao",
                        "wall_style": "white",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcobble01_ao_Wallyellow_linen(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cobble01-ao",
                        "wall_style": "yellow-linen",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcobble01_ao_Wallgray(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cobble01-ao",
                        "wall_style": "gray",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcobble01_ao_Wallstucco(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cobble01-ao",
                        "wall_style": "stucco",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcobble01_ao_Wallcanvas(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cobble01-ao",
                        "wall_style": "canvas",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcobble01_ao_Wallcapriccio(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cobble01-ao",
                        "wall_style": "capriccio",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcobble01_ao_Wallcream(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cobble01-ao",
                        "wall_style": "cream",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_Combined_Floorcobble01_ao_Wallgray_ceramic(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "cobble01-ao",
                        "wall_style": "gray-ceramic",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)
            
@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_130(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_130.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_299(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_299.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_201(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_201.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_77(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_77.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_562(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_562.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_385(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_385.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_336(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_336.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_42(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_42.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_750(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_750.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_487(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_487.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_93(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_93.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_470(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_470.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_15(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_15.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_266(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_266.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_435(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_435.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_61(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_61.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_852(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_852.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_581(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_581.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_578(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_578.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_740(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_740.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_793(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_793.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_980(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_980.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_935(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_935.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_38(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_38.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_462(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_462.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_330(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_330.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_157(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_157.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_508(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_508.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_668(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_668.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_171(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_171.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_851(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_851.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_991(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_991.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_847(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_847.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_749(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_749.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_284(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_284.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_818(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_818.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_35(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_35.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_158(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_158.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_105(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_105.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_607(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_607.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_89(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_89.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_758(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_758.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_661(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_661.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_707(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_707.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_169(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_169.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_553(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_553.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_998(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_998.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_595(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_595.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_83(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_83.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_619(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_619.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_889(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_889.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_692(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_692.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_854(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_854.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_252(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_252.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_554(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_554.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_784(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_784.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_358(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_358.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_528(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_528.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_183(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_183.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_505(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_505.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_144(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_144.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_925(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_925.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_450(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_450.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_895(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_895.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_685(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_685.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_808(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_808.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_641(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_641.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_904(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_904.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_951(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_951.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_321(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_321.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_577(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_577.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_125(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_125.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_454(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_454.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_683(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_683.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_21(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_21.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_421(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_421.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_390(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_390.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_71(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_71.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_623(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_623.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_409(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_409.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_236(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_236.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_27(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_27.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_727(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_727.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_782(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_782.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_928(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_928.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_494(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_494.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_778(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_778.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_636(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_636.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_606(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_606.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_967(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_967.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_669(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_669.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_875(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_875.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_484(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_484.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_495(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_495.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_907(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_907.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_773(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_773.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_844(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_844.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_439(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_439.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_367(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_367.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_978(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_978.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_86(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_86.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_219(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_219.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_182(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_182.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_639(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_639.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_580(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_580.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_468(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_468.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_500(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_500.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_532(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_532.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_496(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_496.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_886(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_886.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_210(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_210.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_861(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_861.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_549(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_549.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_18(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_18.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_153(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_153.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_827(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_827.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_714(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_714.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_401(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_401.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_341(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_341.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_941(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_941.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_860(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_860.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_708(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_708.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_667(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_667.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_140(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_140.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_472(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_472.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_917(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_917.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_220(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_220.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_203(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_203.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_490(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_490.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_924(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_924.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_658(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_658.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_726(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_726.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_709(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_709.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_429(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_429.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_820(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_820.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_163(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_163.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_262(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_262.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_759(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_759.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_489(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_489.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_152(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_152.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_265(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_265.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_502(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_502.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_787(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_787.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_191(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_191.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_662(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_662.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_258(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_258.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_395(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_395.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_102(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_102.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_423(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_423.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_1021(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_1021.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_999(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_999.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_192(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_192.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_1006(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_1006.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_801(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_801.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_349(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_349.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_960(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_960.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_281(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_281.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_139(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_139.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_673(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_673.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_399(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_399.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_930(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_930.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_22(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_22.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_550(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_550.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_976(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_976.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_145(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_145.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_120(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_120.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_232(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_232.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_545(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_545.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_324(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_324.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_289(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_289.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_275(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_275.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_486(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_486.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_828(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_828.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_195(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_195.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_417(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_417.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_745(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_745.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_994(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_994.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_564(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_564.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_185(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_185.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_584(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_584.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_49(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_49.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_659(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_659.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_591(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_591.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_640(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_640.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_962(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_962.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_464(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_464.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_14(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_14.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_876(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_876.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_172(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_172.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_80(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_80.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_196(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_196.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_975(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_975.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_540(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_540.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_751(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_751.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_47(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_47.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_318(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_318.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_391(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_391.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_518(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_518.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_746(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_746.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_378(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_378.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_75(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_75.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_37(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_37.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_880(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_880.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_715(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_715.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_97(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_97.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_198(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_198.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_467(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_467.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_193(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_193.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_913(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_913.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_974(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_974.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_645(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_645.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_332(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_332.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_442(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_442.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_660(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_660.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_197(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_197.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_517(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_517.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_829(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_829.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_164(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_164.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_934(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_934.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_166(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_166.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_883(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_883.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_143(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_143.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_29(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_29.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_368(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_368.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_892(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_892.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_647(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_647.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_415(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_415.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_216(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_216.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_254(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_254.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_205(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_205.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_114(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_114.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_887(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_887.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_872(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_872.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_565(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_565.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_356(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_356.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_587(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_587.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_177(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_177.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_304(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_304.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_511(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_511.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_589(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_589.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_798(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_798.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_716(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_716.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_608(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_608.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_534(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_534.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_129(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_129.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_437(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_437.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_438(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_438.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_945(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_945.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_138(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_138.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_1009(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_1009.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_888(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_888.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_869(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_869.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_675(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_675.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_949(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_949.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_428(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_428.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_463(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_463.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_52(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_52.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_711(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_711.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_291(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_291.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_733(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_733.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_506(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_506.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_984(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_984.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_792(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_792.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_912(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_912.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_933(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_933.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_374(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_374.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_136(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_136.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_392(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_392.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_213(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_213.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_160(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_160.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_509(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_509.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_805(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_805.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_99(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_99.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_64(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_64.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_1019(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_1019.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_546(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_546.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_441(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_441.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_297(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_297.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_245(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_245.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_66(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_66.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_384(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_384.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_504(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_504.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_741(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_741.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_1016(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_1016.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_622(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_622.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_932(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_932.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_146(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_146.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_803(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_803.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_573(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_573.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_583(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_583.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_253(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_253.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_909(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_909.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_971(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_971.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_206(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_206.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_906(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_906.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_597(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_597.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_682(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_682.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_954(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_954.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_712(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_712.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_940(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_940.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_43(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_43.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_40(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_40.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_1(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_1.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_174(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_174.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_271(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_271.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_3(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_3.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_456(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_456.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_632(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_632.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_488(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_488.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_244(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_244.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_783(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_783.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_326(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_326.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_131(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_131.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_237(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_237.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_239(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_239.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_256(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_256.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_791(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_791.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_149(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_149.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_903(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_903.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_843(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_843.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_1000(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_1000.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_946(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_946.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_44(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_44.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_862(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_862.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_997(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_997.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_690(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_690.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_362(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_362.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_453(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_453.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_168(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_168.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_812(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_812.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_654(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_654.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_243(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_243.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_771(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_771.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_457(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_457.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_280(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_280.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_422(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_422.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_979(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_979.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_2(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_2.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_218(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_218.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_696(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_696.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_526(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_526.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_355(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_355.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_348(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_348.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_293(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_293.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_13(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_13.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_650(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_650.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_202(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_202.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_734(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_734.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_902(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_902.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_234(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_234.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_948(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_948.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_566(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_566.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_713(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_713.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_451(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_451.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_53(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_53.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_899(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_899.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_313(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_313.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_370(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_370.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_94(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_94.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_181(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_181.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_214(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_214.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_1014(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_1014.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_68(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_68.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_118(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_118.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_39(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_39.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_525(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_525.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_23(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_23.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_155(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_155.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_96(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_96.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_548(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_548.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_161(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_161.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_78(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_78.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_433(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_433.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_328(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_328.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_845(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_845.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_188(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_188.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_50(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_50.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_919(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_919.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_693(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_693.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_927(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_927.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_90(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_90.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_55(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_55.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_128(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_128.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_593(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_593.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_807(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_807.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_117(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_117.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_329(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_329.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_835(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_835.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_311(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_311.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_760(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_760.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_929(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_929.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_100(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_100.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_1023(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_1023.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_1011(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_1011.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_165(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_165.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_839(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_839.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_943(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_943.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_957(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_957.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_920(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_920.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_365(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_365.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_492(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_492.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_110(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_110.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_436(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_436.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_323(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_323.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_721(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_721.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_473(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_473.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_910(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_910.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_679(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_679.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_515(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_515.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_867(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_867.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_966(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_966.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_642(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_642.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_148(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_148.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_873(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_873.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_811(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_811.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_269(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_269.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_250(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_250.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_821(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_821.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_567(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_567.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_822(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_822.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_127(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_127.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_779(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_779.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_242(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_242.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_107(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_107.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_246(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_246.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_190(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_190.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_688(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_688.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_132(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_132.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_227(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_227.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_207(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_207.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_87(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_87.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_572(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_572.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_635(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_635.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_448(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_448.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_187(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_187.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_88(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_88.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_871(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_871.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_115(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_115.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_780(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_780.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_469(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_469.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_863(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_863.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_1017(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_1017.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_866(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_866.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_638(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_638.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_576(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_576.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_799(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_799.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_543(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_543.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_209(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_209.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_870(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_870.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_896(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_896.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_732(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_732.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_523(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_523.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_703(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_703.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_590(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_590.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_942(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_942.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_335(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_335.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_556(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_556.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_264(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_264.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_79(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_79.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_180(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_180.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_722(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_722.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_8(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_8.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_81(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_81.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_339(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_339.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_1005(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_1005.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_612(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_612.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_806(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_806.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_41(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_41.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_858(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_858.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_7(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_7.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_235(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_235.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_455(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_455.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_238(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_238.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_334(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_334.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_371(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_371.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_700(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_700.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_987(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_987.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_900(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_900.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_1008(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_1008.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_353(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_353.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_418(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_418.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_804(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_804.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_241(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_241.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_684(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_684.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_186(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_186.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_676(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_676.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_301(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_301.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_724(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_724.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_340(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_340.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_307(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_307.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_885(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_885.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_611(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_611.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_33(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_33.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_544(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_544.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_346(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_346.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_60(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_60.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_809(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_809.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_678(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_678.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_848(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_848.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_31(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_31.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_261(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_261.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_383(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_383.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_618(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_618.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_830(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_830.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_478(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_478.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_768(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_768.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_592(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_592.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_570(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_570.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_381(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_381.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_352(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_352.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_446(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_446.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_274(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_274.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_167(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_167.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_34(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_34.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_718(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_718.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_393(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_393.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_359(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_359.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_154(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_154.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_124(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_124.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_769(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_769.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_602(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_602.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_742(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_742.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_137(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_137.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_57(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_57.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_278(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_278.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_996(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_996.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_279(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_279.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_251(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_251.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_817(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_817.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_481(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_481.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_394(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_394.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_444(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_444.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_414(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_414.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_952(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_952.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_846(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_846.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_9(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_9.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_789(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_789.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_106(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_106.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_389(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_389.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_666(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_666.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_199(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_199.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_302(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_302.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_627(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_627.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_388(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_388.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_836(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_836.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_774(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_774.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_890(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_890.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_677(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_677.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_893(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_893.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_1007(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_1007.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_476(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_476.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_230(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_230.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_691(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_691.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_1003(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_1003.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_777(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_777.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_212(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_212.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_67(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_67.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_300(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_300.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_337(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_337.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_819(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_819.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_767(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_767.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_995(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_995.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_558(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_558.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_317(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_317.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_824(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_824.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_32(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_32.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_255(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_255.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_837(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_837.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_944(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_944.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_530(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_530.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_977(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_977.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_985(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_985.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_648(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_648.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_541(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_541.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_406(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_406.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_637(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_637.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_686(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_686.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_30(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_30.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_842(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_842.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_785(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_785.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_756(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_756.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_687(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_687.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_560(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_560.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_91(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_91.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_268(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_268.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_482(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_482.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_786(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_786.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_621(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_621.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_257(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_257.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_319(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_319.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_375(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_375.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_226(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_226.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_17(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_17.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_223(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_223.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_825(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_825.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_633(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_633.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_425(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_425.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_156(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_156.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_990(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_990.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_681(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_681.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_701(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_701.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_815(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_815.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_364(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_364.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_134(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_134.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_419(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_419.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_12(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_12.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_972(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_972.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_56(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_56.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_412(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_412.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_702(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_702.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_404(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_404.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_221(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_221.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_286(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_286.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_552(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_552.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_85(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_85.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_663(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_663.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_603(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_603.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_797(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_797.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_379(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_379.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_653(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_653.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_730(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_730.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_162(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_162.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_263(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_263.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_363(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_363.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_58(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_58.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_698(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_698.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_471(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_471.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_568(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_568.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_735(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_735.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_915(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_915.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_320(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_320.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_588(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_588.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_1001(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_1001.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_403(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_403.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_314(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_314.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_322(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_322.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_524(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_524.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_752(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_752.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_755(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_755.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_725(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_725.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_82(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_82.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_956(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_956.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_884(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_884.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_25(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_25.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_757(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_757.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_59(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_59.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_347(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_347.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_62(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_62.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_617(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_617.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_474(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_474.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_586(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_586.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_781(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_781.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_963(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_963.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_396(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_396.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_911(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_911.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_717(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_717.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_287(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_287.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_772(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_772.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_765(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_765.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_744(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_744.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_856(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_856.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_499(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_499.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_522(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_522.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_224(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_224.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_710(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_710.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_736(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_736.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_501(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_501.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_992(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_992.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_460(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_460.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_387(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_387.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_109(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_109.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_585(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_585.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_574(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_574.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_826(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_826.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_652(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_652.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_529(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_529.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_308(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_308.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_360(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_360.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_298(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_298.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_859(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_859.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_761(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_761.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_276(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_276.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_794(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_794.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_354(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_354.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_6(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_6.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_141(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_141.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_796(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_796.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_420(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_420.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_723(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_723.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_170(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_170.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_624(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_624.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_1012(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_1012.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_510(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_510.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_430(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_430.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_699(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_699.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_905(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_905.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_918(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_918.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_776(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_776.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_672(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_672.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_898(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_898.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_604(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_604.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_706(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_706.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_211(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_211.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_551(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_551.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_51(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_51.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_121(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_121.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_123(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_123.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_350(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_350.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_0(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_0.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_857(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_857.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_537(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_537.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_248(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_248.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_988(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_988.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_763(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_763.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_405(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_405.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_485(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_485.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_285(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_285.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_357(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_357.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_65(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_65.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_98(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_98.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_1018(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_1018.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_770(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_770.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_881(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_881.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_113(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_113.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_173(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_173.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_361(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_361.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_864(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_864.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_24(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_24.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_497(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_497.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_657(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_657.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_689(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_689.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_233(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_233.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_1020(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_1020.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_738(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_738.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_159(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_159.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_816(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_816.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_616(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_616.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_535(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_535.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_605(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_605.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_536(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_536.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_609(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_609.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_283(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_283.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_231(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_231.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_671(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_671.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_865(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_865.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_26(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_26.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_802(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_802.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_208(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_208.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_923(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_923.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_555(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_555.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_306(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_306.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_850(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_850.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_921(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_921.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_179(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_179.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_222(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_222.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_386(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_386.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_599(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_599.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_938(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_938.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_151(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_151.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_303(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_303.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_305(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_305.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_432(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_432.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_424(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_424.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_273(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_273.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_849(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_849.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_594(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_594.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_189(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_189.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_877(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_877.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_748(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_748.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_477(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_477.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_953(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_953.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_147(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_147.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_743(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_743.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_338(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_338.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_514(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_514.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_413(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_413.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_101(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_101.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_225(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_225.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_729(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_729.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_813(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_813.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_874(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_874.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_316(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_316.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_272(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_272.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_559(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_559.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_290(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_290.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_598(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_598.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_891(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_891.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_372(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_372.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_48(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_48.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_964(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_964.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_894(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_894.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_766(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_766.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_1002(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_1002.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_74(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_74.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_184(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_184.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_122(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_122.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_103(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_103.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_697(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_697.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_561(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_561.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_629(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_629.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_431(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_431.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_831(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_831.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_973(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_973.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_466(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_466.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_503(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_503.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_72(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_72.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_600(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_600.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_312(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_312.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_986(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_986.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_795(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_795.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_331(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_331.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_649(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_649.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_344(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_344.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_878(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_878.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_215(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_215.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_111(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_111.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_961(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_961.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_664(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_664.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_634(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_634.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_531(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_531.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_366(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_366.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_646(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_646.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_582(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_582.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_959(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_959.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_965(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_965.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_479(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_479.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_498(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_498.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_747(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_747.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_84(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_84.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_579(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_579.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_936(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_936.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_762(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_762.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_527(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_527.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_955(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_955.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_76(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_76.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_989(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_989.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_596(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_596.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_5(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_5.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_465(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_465.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_512(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_512.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_4(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_4.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_19(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_19.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_116(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_116.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_882(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_882.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_351(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_351.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_491(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_491.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_868(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_868.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_665(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_665.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_926(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_926.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_670(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_670.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_493(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_493.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_823(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_823.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_142(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_142.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_260(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_260.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_135(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_135.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_28(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_28.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_853(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_853.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_704(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_704.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_11(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_11.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_834(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_834.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_45(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_45.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_720(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_720.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_937(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_937.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_10(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_10.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_46(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_46.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_533(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_533.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_705(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_705.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_922(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_922.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_342(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_342.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_914(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_914.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_95(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_95.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_217(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_217.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_628(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_628.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_841(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_841.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_630(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_630.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_54(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_54.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_200(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_200.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_204(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_204.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_194(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_194.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_908(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_908.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_426(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_426.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_695(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_695.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_296(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_296.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_625(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_625.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_259(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_259.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_790(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_790.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_958(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_958.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_655(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_655.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_70(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_70.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_150(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_150.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_63(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_63.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_719(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_719.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_731(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_731.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_480(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_480.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_133(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_133.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_838(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_838.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_615(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_615.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_292(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_292.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_267(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_267.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_620(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_620.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_571(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_571.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_288(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_288.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_968(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_968.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_982(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_982.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_440(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_440.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_513(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_513.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_475(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_475.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_459(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_459.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_16(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_16.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_325(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_325.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_416(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_416.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_36(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_36.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_343(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_343.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_408(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_408.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_315(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_315.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_569(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_569.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_754(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_754.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_916(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_916.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_610(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_610.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_69(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_69.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_728(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_728.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_309(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_309.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_380(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_380.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_240(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_240.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_483(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_483.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_458(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_458.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_461(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_461.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_310(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_310.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_694(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_694.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_277(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_277.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_1004(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_1004.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_519(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_519.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_970(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_970.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_651(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_651.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_247(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_247.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_674(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_674.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_521(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_521.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_939(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_939.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_228(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_228.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_631(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_631.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_626(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_626.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_788(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_788.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_92(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_92.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_739(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_739.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_613(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_613.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_897(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_897.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_373(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_373.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_680(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_680.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_282(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_282.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_295(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_295.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_643(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_643.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_73(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_73.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_445(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_445.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_294(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_294.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_126(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_126.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_382(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_382.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_369(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_369.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_947(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_947.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_449(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_449.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_737(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_737.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_333(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_333.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_601(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_601.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_557(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_557.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_270(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_270.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_547(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_547.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_410(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_410.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_1010(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_1010.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_1022(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_1022.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_377(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_377.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_879(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_879.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_981(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_981.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_119(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_119.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_104(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_104.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_539(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_539.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_176(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_176.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_950(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_950.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_443(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_443.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_764(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_764.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_832(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_832.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_398(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_398.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_516(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_516.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_345(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_345.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_931(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_931.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_614(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_614.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_855(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_855.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_175(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_175.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_1015(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_1015.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_542(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_542.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_901(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_901.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_397(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_397.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_993(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_993.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_810(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_810.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_178(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_178.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_411(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_411.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_814(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_814.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_969(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_969.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_400(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_400.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_575(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_575.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_563(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_563.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_229(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_229.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_108(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_108.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_327(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_327.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_833(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_833.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_775(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_775.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_407(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_407.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_112(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_112.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_447(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_447.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_1013(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_1013.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_983(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_983.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_644(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_644.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_427(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_427.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_507(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_507.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_753(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_753.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_20(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_20.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_840(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_840.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_452(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_452.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_402(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_402.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_538(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_538.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_249(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_249.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_434(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_434.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_656(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_656.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_376(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_376.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_800(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_800.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_floor_light_sync_modified_520(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        # 覆盖scene_xml默认路径
        if "scene_xml" not in kwargs or kwargs["scene_xml"] is None:
            kwargs.update({"scene_xml": "scenes/lights/floor_light_sync_modified_520.xml"})

        # 覆盖scene_properties默认配置
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "light-gray",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )

        # 调用父类构造函数
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)
        
@register_problem
class Libero_Floor_Manipulation_FloorCarbonFiber001_COL_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CarbonFiber001_COL_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCarbonFiber001_GLOSS_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CarbonFiber001_GLOSS_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCardboardPlain001_ALBEDO_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CardboardPlain001_ALBEDO_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCardboardPlain001_Cube(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CardboardPlain001_Cube",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCardboardPlain001_GLOSS_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CardboardPlain001_GLOSS_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCardboardPlain001_NRM_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CardboardPlain001_NRM_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCardboardPlain001_NRM_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CardboardPlain001_NRM_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCardboardPlain001_REFL_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CardboardPlain001_REFL_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCardboardPlain001_REFL_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CardboardPlain001_REFL_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCardboardPlain001_Sphere(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CardboardPlain001_Sphere",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCardboardPleated001_AO_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CardboardPleated001_AO_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCardboardPleated001_AO_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CardboardPleated001_AO_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCardboardPleated001_COL_VAR2_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CardboardPleated001_COL_VAR2_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCardboardPleated001_Cube(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CardboardPleated001_Cube",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCardboardPleated001_DISP_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CardboardPleated001_DISP_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCardboardPleated001_DISP_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CardboardPleated001_DISP_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCardboardPleated001_GLOSS_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CardboardPleated001_GLOSS_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCardboardPleated001_REFL_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CardboardPleated001_REFL_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCardboardPleated001_REFL_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CardboardPleated001_REFL_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCardboardPleatedWrinkled001_ALBEDO_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CardboardPleatedWrinkled001_ALBEDO_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCardboardPleatedWrinkled001_AO_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CardboardPleatedWrinkled001_AO_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCardboardPleatedWrinkled001_AO_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CardboardPleatedWrinkled001_AO_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCardboardPleatedWrinkled001_COL_VAR1_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CardboardPleatedWrinkled001_COL_VAR1_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCardboardPleatedWrinkled001_COL_VAR1_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CardboardPleatedWrinkled001_COL_VAR1_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCardboardPleatedWrinkled001_COL_VAR2_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CardboardPleatedWrinkled001_COL_VAR2_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCardboardPleatedWrinkled001_COL_VAR2_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CardboardPleatedWrinkled001_COL_VAR2_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCardboardPleatedWrinkled001_NRM_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CardboardPleatedWrinkled001_NRM_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorCardboardPleatedWrinkled001_REFL_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "CardboardPleatedWrinkled001_REFL_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCanvas001_COL_VAR1_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCanvas001_COL_VAR1_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCanvas001_COL_VAR1_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCanvas001_COL_VAR1_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCanvas001_COL_VAR2_2K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCanvas001_COL_VAR2_2K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCanvas001_COL_VAR2_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCanvas001_COL_VAR2_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCanvas001_COL_VAR2_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCanvas001_COL_VAR2_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCanvas001_DISP_2K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCanvas001_DISP_2K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCanvas001_DISP_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCanvas001_DISP_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCanvas001_DISP_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCanvas001_DISP_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCanvas001_NRM_2K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCanvas001_NRM_2K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCanvas001_NRM_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCanvas001_NRM_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCanvas001_OBJECTID_2K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCanvas001_OBJECTID_2K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCanvas001_OBJECTID_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCanvas001_OBJECTID_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCanvas001_REFL_2K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCanvas001_REFL_2K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCanvas001_REFL_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCanvas001_REFL_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCanvas001_REFL_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCanvas001_REFL_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCarpet001_COL_VAR2_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCarpet001_COL_VAR2_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCarpet001_DISP_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCarpet001_DISP_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCarpet001_NRM_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCarpet001_NRM_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCarpet001_REFL_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCarpet001_REFL_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCarpet002_COL(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCarpet002_COL",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCarpet002_DISP(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCarpet002_DISP",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCarpet002_NRM(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCarpet002_NRM",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCarpetFine001_COL_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCarpetFine001_COL_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCarpetFine001_GLOSS_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCarpetFine001_GLOSS_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCarpetFine001_NRM_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCarpetFine001_NRM_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCarpetFine001_REFL_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCarpetFine001_REFL_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCarpetPatchy001_DISP_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCarpetPatchy001_DISP_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCarpetPatchy001_REFL_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCarpetPatchy001_REFL_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCashmere001_COL_VAR1_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCashmere001_COL_VAR1_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCashmere001_COL_VAR2_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCashmere001_COL_VAR2_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCashmere001_DISP_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCashmere001_DISP_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCashmere001_NRM_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCashmere001_NRM_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCotton001_COL_VAR1_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCotton001_COL_VAR1_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCotton001_COL_VAR2_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCotton001_COL_VAR2_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCotton001_DISP_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCotton001_DISP_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCotton001_NRM_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCotton001_NRM_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCotton001_REFL_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCotton001_REFL_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCotton002_COL_VAR1_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCotton002_COL_VAR1_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCotton002_COL_VAR2_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCotton002_COL_VAR2_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCotton003_COL_VAR1_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCotton003_COL_VAR1_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCotton003_COL_VAR2_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCotton003_COL_VAR2_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCotton003_DISP_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCotton003_DISP_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCotton003_GLOSS_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCotton003_GLOSS_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCottonBroadCloth001_COL_VAR1_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCottonBroadCloth001_COL_VAR1_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCottonBroadCloth001_OBJECTID_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCottonBroadCloth001_OBJECTID_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCottonTwill001_COL_VAR2_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCottonTwill001_COL_VAR2_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCottonTwill001_NRM_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCottonTwill001_NRM_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCottonTwill001_NRM_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCottonTwill001_NRM_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCreasesWrinkles001_DISP_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCreasesWrinkles001_DISP_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricCreasesWrinkles001_NRM_VAR2_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricCreasesWrinkles001_NRM_VAR2_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricDenim001_DISP_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricDenim001_DISP_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricDenim001_GLOSS_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricDenim001_GLOSS_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricDenim001_REFL_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricDenim001_REFL_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricDenim002_COL_VAR1_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricDenim002_COL_VAR1_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricDenim002_COL_VAR2_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricDenim002_COL_VAR2_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricDenim002_DISP_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricDenim002_DISP_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricDenim002_GLOSS_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricDenim002_GLOSS_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricDenim002_NRM_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricDenim002_NRM_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricDenim003_COL_VAR1_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricDenim003_COL_VAR1_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricDenim003_COL_VAR1_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricDenim003_COL_VAR1_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricDenim003_GLOSS_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricDenim003_GLOSS_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricDenim003_NRM_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricDenim003_NRM_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricDenim003_REFL_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricDenim003_REFL_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricFleece001_COL_VAR1_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricFleece001_COL_VAR1_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricFleece001_COL_VAR1_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricFleece001_COL_VAR1_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricFleece001_COL_VAR2_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricFleece001_COL_VAR2_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricFleece001_COL_VAR2_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricFleece001_COL_VAR2_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricFleece001_DISP_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricFleece001_DISP_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricFleece001_GLOSS_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricFleece001_GLOSS_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricFleece001_NRM_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricFleece001_NRM_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricFleece001_OBJECTID_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricFleece001_OBJECTID_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricFleece001_REFL_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricFleece001_REFL_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeather001_COL(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeather001_COL",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeather001_DISP(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeather001_DISP",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeather001_NRM(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeather001_NRM",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeather001_SPEC(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeather001_SPEC",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeatherBlack001_COL_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeatherBlack001_COL_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeatherBlack001_DISP_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeatherBlack001_DISP_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeatherBlack001_DISP_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeatherBlack001_DISP_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeatherBlack001_GLOSS_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeatherBlack001_GLOSS_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeatherBlack001_NRM_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeatherBlack001_NRM_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeatherBlack001_REFL_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeatherBlack001_REFL_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeatherBlack001_REFL_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeatherBlack001_REFL_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeatherCrocodile001_AO_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeatherCrocodile001_AO_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeatherCrocodile001_COL_VAR1_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeatherCrocodile001_COL_VAR1_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeatherCrocodile001_COL_VAR2_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeatherCrocodile001_COL_VAR2_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeatherCrocodile001_GLOSS_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeatherCrocodile001_GLOSS_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeatherCrocodile001_NRM_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeatherCrocodile001_NRM_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeatherCrocodile001_NRM_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeatherCrocodile001_NRM_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeatherCrocodile002_AO_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeatherCrocodile002_AO_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeatherCrocodile002_COL_VAR2_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeatherCrocodile002_COL_VAR2_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeatherCrocodile002_GLOSS_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeatherCrocodile002_GLOSS_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeatherCrocodile002_GLOSS_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeatherCrocodile002_GLOSS_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeatherCrocodile002_NRM_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeatherCrocodile002_NRM_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeatherRed001_COL_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeatherRed001_COL_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeatherRed001_GLOSS_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeatherRed001_GLOSS_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeatherRed001_NRM_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeatherRed001_NRM_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeatherRed001_REFL_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeatherRed001_REFL_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeatherWhite001_COL_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeatherWhite001_COL_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeatherWhite001_GLOSS_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeatherWhite001_GLOSS_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLeatherWhite001_REFL_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLeatherWhite001_REFL_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLinen001_COL_VAR1_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLinen001_COL_VAR1_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLinen001_GLOSS_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLinen001_GLOSS_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLinen001_NRM_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLinen001_NRM_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLinen001_REFL_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLinen001_REFL_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLinen002_COL_VAR2_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLinen002_COL_VAR2_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLinen002_DISP_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLinen002_DISP_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLinen002_GLOSS_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLinen002_GLOSS_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricLinen002_NRM_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricLinen002_NRM_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricModeledCotton001_COL_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricModeledCotton001_COL_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricModeledCotton001_GLOSS_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricModeledCotton001_GLOSS_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricModeledCotton001_REFL_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricModeledCotton001_REFL_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricModeledDenim001_COL_VAR1_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricModeledDenim001_COL_VAR1_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricModeledDenim001_DISP_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricModeledDenim001_DISP_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricModeledDenim001_GLOSS_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricModeledDenim001_GLOSS_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricModeledDenim001_REFL_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricModeledDenim001_REFL_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricModeledLinen001_COL_VAR1_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricModeledLinen001_COL_VAR1_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricModeledLinen001_COL_VAR2_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricModeledLinen001_COL_VAR2_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricModeledLinen001_REFL_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricModeledLinen001_REFL_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricModeledNylon001_COL_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricModeledNylon001_COL_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricModeledNylon001_DISP_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricModeledNylon001_DISP_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricModeledNylon001_GLOSS_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricModeledNylon001_GLOSS_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricModeledNylon001_NRM_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricModeledNylon001_NRM_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricModeledPolyester001_REFL_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricModeledPolyester001_REFL_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricModeledWool001_DISP_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricModeledWool001_DISP_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricModeledWool001_GLOSS_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricModeledWool001_GLOSS_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricModeledWool001_NRM_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricModeledWool001_NRM_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricModeledWool001_REFL_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricModeledWool001_REFL_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricMuslin001_NRM_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricMuslin001_NRM_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricMuslin001_REFL_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricMuslin001_REFL_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricPolyester001_COL_VAR1_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricPolyester001_COL_VAR1_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricPolyester001_DISP_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricPolyester001_DISP_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricPolyester001_DISP_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricPolyester001_DISP_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricPolyester001_GLOSS_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricPolyester001_GLOSS_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricPolyester001_REFL_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricPolyester001_REFL_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricPolyester001_REFL_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricPolyester001_REFL_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricPolyester002_COL_VAR2_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricPolyester002_COL_VAR2_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricPolyester002_GLOSS_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricPolyester002_GLOSS_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricPolyester002_NRM_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricPolyester002_NRM_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricPolyester002_REFL_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricPolyester002_REFL_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricPolyester003_DISP_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricPolyester003_DISP_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricPolyester003_NRM_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricPolyester003_NRM_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricPolyester004_REFL_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricPolyester004_REFL_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricPolyester005_COL_VAR1_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricPolyester005_COL_VAR1_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricPolyester005_COL_VAR2_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricPolyester005_COL_VAR2_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricPolyester005_DISP_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricPolyester005_DISP_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricPolyester005_NRM_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricPolyester005_NRM_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricRope001_COL_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricRope001_COL_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricRope001_DISP_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricRope001_DISP_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricRope001_GLOSS_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricRope001_GLOSS_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricRope001_GLOSS_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricRope001_GLOSS_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricString001_AO_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricString001_AO_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricString001_COL_VAR2_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricString001_COL_VAR2_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricString001_COL_VAR2_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricString001_COL_VAR2_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricString001_DISP_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricString001_DISP_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricString001_DISP_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricString001_DISP_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricString001_GLOSS_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricString001_GLOSS_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricString001_NRM_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricString001_NRM_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricString001_NRM_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricString001_NRM_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricSuedeFine001_DISP_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricSuedeFine001_DISP_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricSuedeFine001_GLOSS_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricSuedeFine001_GLOSS_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricSuedeFine001_NRM_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricSuedeFine001_NRM_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricSuedeFine001_REFL_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricSuedeFine001_REFL_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricSuedePatchy001_COL_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricSuedePatchy001_COL_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricSuedePatchy001_DISP_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricSuedePatchy001_DISP_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricSuedePatchy001_NRM_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricSuedePatchy001_NRM_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricTarpPlastic001_AO_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricTarpPlastic001_AO_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricTarpPlastic001_AO_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricTarpPlastic001_AO_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricTarpPlastic001_COL_VAR1_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricTarpPlastic001_COL_VAR1_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricTarpPlastic001_COL_VAR2_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricTarpPlastic001_COL_VAR2_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricTarpPlastic001_COL_VAR2_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricTarpPlastic001_COL_VAR2_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricTarpPlastic001_DISP_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricTarpPlastic001_DISP_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricTarpPlastic001_GLOSS_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricTarpPlastic001_GLOSS_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricTarpPlastic001_GLOSS_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricTarpPlastic001_GLOSS_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricTarpPlastic001_REFL_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricTarpPlastic001_REFL_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricTowel001_COL_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricTowel001_COL_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricTowel001_DISP_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricTowel001_DISP_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricTowel001_GLOSS_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricTowel001_GLOSS_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricTowel001_NRM_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricTowel001_NRM_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricTowel001_REFL_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricTowel001_REFL_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveCouch001_AO_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveCouch001_AO_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveCouch001_AO_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveCouch001_AO_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveCouch001_COL_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveCouch001_COL_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveCouch001_DISP_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveCouch001_DISP_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveCouch001_DISP_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveCouch001_DISP_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveCouch001_GLOSS_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveCouch001_GLOSS_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveCouch001_NRM_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveCouch001_NRM_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveRug001_AO_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveRug001_AO_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveRug001_DISP_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveRug001_DISP_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveRug001_DISP_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveRug001_DISP_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveRug001_GLOSS_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveRug001_GLOSS_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveRug001_GLOSS_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveRug001_GLOSS_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveRug001_NRM_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveRug001_NRM_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveRug001_NRM_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveRug001_NRM_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveRug001_REFL_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveRug001_REFL_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveRug001_REFL_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveRug001_REFL_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveWooly001_ALPHAMASKED_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveWooly001_ALPHAMASKED_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveWooly001_AO_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveWooly001_AO_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveWooly001_COL_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveWooly001_COL_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveWooly001_COL_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveWooly001_COL_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveWooly001_DISP_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveWooly001_DISP_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveWooly001_GLOSS_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveWooly001_GLOSS_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveWooly001_REFL_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveWooly001_REFL_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveZigZag001_AO_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveZigZag001_AO_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveZigZag001_COL_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveZigZag001_COL_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveZigZag001_DISP_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveZigZag001_DISP_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveZigZag001_DISP_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveZigZag001_DISP_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveZigZag001_GLOSS_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveZigZag001_GLOSS_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveZigZag001_NRM_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveZigZag001_NRM_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveZigZag001_REFL_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveZigZag001_REFL_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWeaveZigZag001_REFL_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWeaveZigZag001_REFL_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWicker001_ALPHAMASKED_VAR2_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWicker001_ALPHAMASKED_VAR2_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWicker001_ALPHAMASKED_VAR2_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWicker001_ALPHAMASKED_VAR2_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWicker001_AO_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWicker001_AO_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWicker001_COL_VAR1_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWicker001_COL_VAR1_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWicker001_COL_VAR2_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWicker001_COL_VAR2_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWicker001_GLOSS_3K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWicker001_GLOSS_3K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWicker001_REFL_4K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWicker001_REFL_4K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWool001_DISP_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWool001_DISP_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWool001_GLOSS_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWool001_GLOSS_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWool001_GLOSS_HIRES(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWool001_GLOSS_HIRES",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)

@register_problem
class Libero_Floor_Manipulation_FloorFabricWool001_NRM_6K(Libero_Floor_Manipulation):
    def __init__(self, bddl_file_name, horizon_view, vertical_view, init_state, *args, **kwargs):
        if "scene_properties" not in kwargs or kwargs["scene_properties"] is None:
            kwargs.update(
                {
                    "scene_properties": {
                        "floor_style": "FabricWool001_NRM_6K",
                        "wall_style": "light-gray-plaster",
                    }
                }
            )
        # 继承基类所有默认配置
        super().__init__(bddl_file_name=bddl_file_name, horizon_view=horizon_view, vertical_view=vertical_view, init_state=init_state, *args, **kwargs)